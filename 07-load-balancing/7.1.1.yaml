AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckPath: "/index.html"
      HealthCheckProtocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue AllenModule08VPCId
      Protocol: HTTP
      Port: 80

  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: 'AutomationBoxes'
      VPCZoneIdentifier:
        - !ImportValue AllenModule08PublicSubnetId
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30 
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'

  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0d9858aa3c6322f73
      InstanceType: 't2.micro'
      LaunchConfigurationName: 'SimpleWebServerLC'
      SecurityGroups:
        - !ImportValue AllenModule08SecurityGroup
      UserData: 
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            amazon-linux-extras install -y aws-cfn-bootstrap

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --configsets All \
              --region ${AWS::Region}

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --region ${AWS::Region}

    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureStelligentProject
        ConfigureStelligentProject:
          packages:
            yum:
              nginx: ["1.12"]
          files:
            /usr/share/nginx/html/index.html:
              content: '<p>Automation for the People</p>'
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
