---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ParameterName:
    Type: AWS::SSM::Parameter::Name
    Default: /allen.fisher/UserName
    Description: "User Name for the engineer"
  
  UserName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/UserName

  Name:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/Name

  Title:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/Title

  StreetAddress:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/Address
  
  City:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/City
  
  State:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/State
    
  TimeZone:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/TimeZone
  
  TeamName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/Team
  
  StartDate:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /allen.fisher/StartDate

Resources:
  MyAlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyAlb
      Port: 80
      Protocol: "HTTP"
      DefaultActions: 
        - Order: 1
          TargetGroupArn: !Ref MyTargetGroup
          Type: "forward"

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckPath: "/index.html"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      VpcId: !ImportValue AllenModule06VPCId
      Protocol: HTTP
      Port: 80
      Matcher: 
          HttpCode: "200"
  
  MyAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "65"
      Scheme: internet-facing
      SecurityGroups: 
        - !ImportValue AllenModule06SecurityGroup
      Subnets: 
        - !ImportValue AllenModule06PublicSubnetId1
        - !ImportValue AllenModule06PublicSubnetId2

  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: 'AutomationBoxes'
      VPCZoneIdentifier:
        - !ImportValue AllenModule06PublicSubnetId1
        - !ImportValue AllenModule06PublicSubnetId2
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30 
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'
      TargetGroupARNs:
        - !Ref MyTargetGroup

  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0d9858aa3c6322f73
      InstanceType: 't2.micro'
      LaunchConfigurationName: 'SimpleWebServerLC'
      SecurityGroups:
        - !ImportValue AllenModule06SecurityGroup
      UserData: 
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            amazon-linux-extras install -y aws-cfn-bootstrap

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --configsets All \
              --region ${AWS::Region}

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --region ${AWS::Region}

    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureStelligentProject
        ConfigureStelligentProject:
          packages:
            yum:
              nginx: ["1.12"]
          files:
            /usr/share/nginx/html/index.html:
              content: !Sub |
                <H1>Automation for ${ParameterName}</H1>
                <p>UserName: ${UserName}</p>
                <p>Full Name: ${Name}</p>
                <p>MiddleName: {{resolve:ssm-secure:/allen.fisher/middlename:1}}</p>
                <p>UserName: ${UserName}</p>
                <p>Title: ${Title}</p>
                <p>Address: ${StreetAddress}, ${City}, ${State}</p>
                <p>Time Zone: ${TimeZone}</p>
                <p>Team Name: ${TeamName}</p>
                <p>Start Date ${StartDate}</p>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
